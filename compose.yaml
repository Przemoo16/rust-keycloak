services:
  proxy:
    build:
      context: ./proxy
    ports:
      - "8000:80"
    volumes:
      - type: bind
        source: ./proxy/nginx.conf.template
        target: /opt/nginx/nginx.conf.template
    depends_on:
      - app
      - auth

  app:
    build:
      context: ./app
      target: dev
    volumes:
      - type: bind
        source: ./app/src
        target: /opt/app/src
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      auth:
        condition: service_started

  auth:
    image: docker.io/keycloak/keycloak:25.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: "${AUTH_SERVICE_PUBLIC_URL}"
      KC_HTTP_RELATIVE_PATH: /auth
      KC_HTTP_PORT: 80
      KC_DB: postgres
      KC_DB_PASSWORD: "${DB_PASSWORD}"
      KC_DB_USERNAME: "${DB_USER}"
      KC_DB_URL_DATABASE: "${DB_NAME}"
      KC_DB_URL_HOST: db
      KC_DB_URL_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    command: start-dev

  db:
    image: docker.io/postgres:15.7
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_NAME}"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username",
          "${DB_USER}",
          "--dbname",
          "${DB_NAME}",
        ]
      interval: 2s
      timeout: 3s
      retries: 3
      start_period: 5s

volumes:
  db-data:
